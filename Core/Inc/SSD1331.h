#ifndef _SSD1331_HAL_H_
#define _SSD1331_HAL_H_

#include "main.h"

#define RGB_OLED_WIDTH                      96
#define RGB_OLED_HEIGHT                     64

extern SPI_HandleTypeDef hspi1; // SPI instance, change if needed

// SSD1331 Command Definitions
#define CMD_DRAW_LINE                       0x21
#define CMD_DRAW_RECTANGLE                  0x22
#define CMD_COPY_WINDOW                     0x23
#define CMD_DIM_WINDOW                      0x24
#define CMD_CLEAR_WINDOW                    0x25
#define CMD_FILL_WINDOW                     0x26
#define DISABLE_FILL                        0x00
#define ENABLE_FILL                         0x01
#define CMD_CONTINUOUS_SCROLLING_SETUP      0x27
#define CMD_DEACTIVE_SCROLLING              0x2E
#define CMD_ACTIVE_SCROLLING                0x2F
#define CMD_SET_COLUMN_ADDRESS              0x15
#define CMD_SET_ROW_ADDRESS                 0x75
#define CMD_SET_CONTRAST_A                  0x81
#define CMD_SET_CONTRAST_B                  0x82
#define CMD_SET_CONTRAST_C                  0x83
#define CMD_MASTER_CURRENT_CONTROL          0x87
#define CMD_SET_PRECHARGE_SPEED_A           0x8A
#define CMD_SET_PRECHARGE_SPEED_B           0x8B
#define CMD_SET_PRECHARGE_SPEED_C           0x8C
#define CMD_SET_REMAP                       0xA0
#define CMD_SET_DISPLAY_START_LINE          0xA1
#define CMD_SET_DISPLAY_OFFSET              0xA2
#define CMD_NORMAL_DISPLAY                  0xA4
#define CMD_ENTIRE_DISPLAY_ON               0xA5
#define CMD_ENTIRE_DISPLAY_OFF              0xA6
#define CMD_INVERSE_DISPLAY                 0xA7
#define CMD_SET_MULTIPLEX_RATIO             0xA8
#define CMD_DIM_MODE_SETTING                0xAB
#define CMD_SET_MASTER_CONFIGURE            0xAD
#define CMD_DIM_MODE_DISPLAY_ON             0xAC
#define CMD_DISPLAY_OFF                     0xAE
#define CMD_NORMAL_BRIGHTNESS_DISPLAY_ON    0xAF
#define CMD_POWER_SAVE_MODE                 0xB0
#define CMD_PHASE_PERIOD_ADJUSTMENT         0xB1
#define CMD_DISPLAY_CLOCK_DIV               0xB3
#define CMD_SET_GRAY_SCALE_TABLE            0xB8
#define CMD_ENABLE_LINEAR_GRAY_SCALE_TABLE  0xB9
#define CMD_SET_PRECHARGE_VOLTAGE           0xBB
#define CMD_SET_V_VOLTAGE                   0xBE

// Pin control macros (define these according to CubeMX)
#define OLED_CS_HIGH()    HAL_GPIO_WritePin(CS_SC_GPIO_Port, CS_SC_Pin, GPIO_PIN_SET)
#define OLED_CS_LOW()     HAL_GPIO_WritePin(CS_SC_GPIO_Port, CS_SC_Pin, GPIO_PIN_RESET)
#define OLED_DC_HIGH()    HAL_GPIO_WritePin(DC_GPIO_Port, DC_Pin, GPIO_PIN_SET)
#define OLED_DC_LOW()     HAL_GPIO_WritePin(DC_GPIO_Port, DC_Pin, GPIO_PIN_RESET)
#define OLED_RST_HIGH()   HAL_GPIO_WritePin(RST_GPIO_Port, RST_Pin, GPIO_PIN_SET)
#define OLED_RST_LOW()    HAL_GPIO_WritePin(RST_GPIO_Port, RST_Pin, GPIO_PIN_RESET)

// Color definitions (24-bit RGB)
#define RGB(r, g, b)   (((r & 0xFF) << 16) | ((g & 0xFF) << 8) | (b & 0xFF))

// Main interface
void SSD1331_Init(void);
void SSD1331_SendCommand(uint8_t cmd);
void SSD1331_SendData(uint8_t *data, uint16_t size);
void SSD1331_DrawPixel(uint8_t x, uint8_t y, uint32_t color);
void SSD1331_Clear(void);
void SSD1331_DrawLine(uint8_t x0, uint8_t y0, uint8_t x1, uint8_t y1, uint32_t color);
void SSD1331_FillRect(uint8_t x, uint8_t y, uint8_t w, uint8_t h, uint32_t color);
void SSD1331_DrawFilledRectangle(uint8_t x0, uint8_t y0, uint8_t x1, uint8_t y1, uint16_t color);

// ==== Text rendering interface ====
void SSD1331_DrawChar(uint8_t x, uint8_t y, char c, uint32_t color);
void SSD1331_DrawString(uint8_t x, uint8_t y, const char* str, uint32_t color);

// ==== 5x7 Font definition: only ASCII 32â€“90 (space to 'Z') ====
static const uint8_t Font5x7[][5] = {
    {0x00,0x00,0x00,0x00,0x00}, // SPACE (32)
    {0x00,0x00,0x5F,0x00,0x00}, // ! (33)
    {0x00,0x07,0x00,0x07,0x00}, // " (34)
    {0x14,0x7F,0x14,0x7F,0x14}, // # (35)
    {0x24,0x2A,0x7F,0x2A,0x12}, // $ (36)
    {0x23,0x13,0x08,0x64,0x62}, // % (37)
    {0x36,0x49,0x55,0x22,0x50}, // & (38)
    {0x00,0x05,0x03,0x00,0x00}, // ' (39)
    {0x00,0x1C,0x22,0x41,0x00}, // ( (40)
    {0x00,0x41,0x22,0x1C,0x00}, // ) (41)
    {0x14,0x08,0x3E,0x08,0x14}, // * (42)
    {0x08,0x08,0x3E,0x08,0x08}, // + (43)
    {0x00,0x50,0x30,0x00,0x00}, // , (44)
    {0x08,0x08,0x08,0x08,0x08}, // - (45)
    {0x00,0x60,0x60,0x00,0x00}, // . (46)
    {0x20,0x10,0x08,0x04,0x02}, // / (47)
    {0x3E,0x51,0x49,0x45,0x3E}, // 0 (48)
    {0x00,0x42,0x7F,0x40,0x00}, // 1 (49)
    {0x42,0x61,0x51,0x49,0x46}, // 2 (50)
    {0x21,0x41,0x45,0x4B,0x31}, // 3 (51)
    {0x18,0x14,0x12,0x7F,0x10}, // 4 (52)
    {0x27,0x45,0x45,0x45,0x39}, // 5 (53)
    {0x3C,0x4A,0x49,0x49,0x30}, // 6 (54)
    {0x01,0x71,0x09,0x05,0x03}, // 7 (55)
    {0x36,0x49,0x49,0x49,0x36}, // 8 (56)
    {0x06,0x49,0x49,0x29,0x1E}, // 9 (57)
    {0x00,0x36,0x36,0x00,0x00}, // : (58)
    {0x00,0x56,0x36,0x00,0x00}, // ; (59)
    {0x08,0x14,0x22,0x41,0x00}, // < (60)
    {0x14,0x14,0x14,0x14,0x14}, // = (61)
    {0x00,0x41,0x22,0x14,0x08}, // > (62)
    {0x02,0x01,0x51,0x09,0x06}, // ? (63)
    {0x32,0x49,0x79,0x41,0x3E}, // @ (64)
    {0x7E,0x11,0x11,0x11,0x7E}, // A (65)
    {0x7F,0x49,0x49,0x49,0x36}, // B (66)
    {0x3E,0x41,0x41,0x41,0x22}, // C (67)
    {0x7F,0x41,0x41,0x22,0x1C}, // D (68)
    {0x7F,0x49,0x49,0x49,0x41}, // E (69)
    {0x7F,0x09,0x09,0x09,0x01}, // F (70)
    {0x3E,0x41,0x49,0x49,0x7A}, // G (71)
    {0x7F,0x08,0x08,0x08,0x7F}, // H (72)
    {0x00,0x41,0x7F,0x41,0x00}, // I (73)
    {0x20,0x40,0x41,0x3F,0x01}, // J (74)
    {0x7F,0x08,0x14,0x22,0x41}, // K (75)
    {0x7F,0x40,0x40,0x40,0x40}, // L (76)
    {0x7F,0x02,0x0C,0x02,0x7F}, // M (77)
    {0x7F,0x04,0x08,0x10,0x7F}, // N (78)
    {0x3E,0x41,0x41,0x41,0x3E}, // O (79)
    {0x7F,0x09,0x09,0x09,0x06}, // P (80)
    {0x3E,0x41,0x51,0x21,0x5E}, // Q (81)
    {0x7F,0x09,0x19,0x29,0x46}, // R (82)
    {0x46,0x49,0x49,0x49,0x31}, // S (83)
    {0x01,0x01,0x7F,0x01,0x01}, // T (84)
    {0x3F,0x40,0x40,0x40,0x3F}, // U (85)
    {0x1F,0x20,0x40,0x20,0x1F}, // V (86)
    {0x3F,0x40,0x38,0x40,0x3F}, // W (87)
    {0x63,0x14,0x08,0x14,0x63}, // X (88)
    {0x07,0x08,0x70,0x08,0x07}, // Y (89)
    {0x61,0x51,0x49,0x45,0x43}  // Z (90)
};

#endif

